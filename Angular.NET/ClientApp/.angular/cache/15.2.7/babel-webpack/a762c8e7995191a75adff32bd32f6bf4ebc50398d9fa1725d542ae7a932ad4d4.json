{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet AntonioProvaComponent = class AntonioProvaComponent {\n  constructor(http, baseUrl) {\n    this.users = [];\n    http.get(baseUrl + 'usercontroller').subscribe(result => {\n      this.users = result;\n    }, error => console.error(error));\n  }\n};\nAntonioProvaComponent = __decorate([Component({\n  selector: 'antonio-prova',\n  templateUrl: './antonio-prova.component.html',\n  styleUrls: ['./antonio-prova.component.css']\n}), __param(1, Inject('BASE_URL'))], AntonioProvaComponent);\nexport { AntonioProvaComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAO,eAAe;AAQzC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YAAYC,IAAgB,EACIC,OAAe;IAHxC,UAAK,GAAgB,EAAE;IAK5BD,IAAI,CAACE,GAAG,CAAcD,OAAO,GAAG,gBAAgB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACnE,IAAI,CAACC,KAAK,GAAGD,MAAM;IACrB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAEnC;CACD;AAZYR,qBAAqB,eALjCF,SAAS,CAAC;EACTY,QAAQ,EAAK,eAAe;EAC5BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,EAMaC,iBAAM,CAAC,UAAU,CAAC,IALpBb,qBAAqB,CAYjC;SAZYA,qBAAqB","names":["Component","Inject","AntonioProvaComponent","constructor","http","baseUrl","get","subscribe","result","users","error","console","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\aflor\\Documents\\PROGETTI_AN\\REPOSITORY\\_test\\Angular\\Angular.NET\\Angular.NET\\ClientApp\\src\\app\\antonio-prova\\antonio-prova.component.ts"],"sourcesContent":["import { Component, Inject} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector:    'antonio-prova',\r\n  templateUrl: './antonio-prova.component.html',\r\n  styleUrls: ['./antonio-prova.component.css'],\r\n})\r\nexport class AntonioProvaComponent {\r\n\r\n  public users: Array<User> = [];\r\n\r\n  constructor(http: HttpClient,\r\n              @Inject('BASE_URL') baseUrl: string) {\r\n\r\n    http.get<Array<User>>(baseUrl + 'usercontroller').subscribe(result => {\r\n      this.users = result;\r\n    }, error => console.error(error));\r\n\r\n  }\r\n}\r\n interface User {\r\n  name:         string;\r\n  surname:      string;\r\n  description:  string;\r\n  email:        string;\r\n  phone_number: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}